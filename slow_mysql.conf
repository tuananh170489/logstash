input{
	file {
		path => "/var/log/mysql/slow_queries.log"
		start_position => "beginning"
		codec => multiline {
			pattern => "^# Time: "
			negate => true
			what => previous
		}
	}
}

filter{
	grok{
		match => {
			"message" => "# Time: (?<timestamp>%{YEAR}[-]%{MONTHNUM}[-]%{MONTHDAY}[T]%{TIME}%{ISO8601_TIMEZONE:timezone})(\n# User@Host: %{NOTSPACE:user} @  \[%{IP:ip}\]  Id: %{NUMBER:id})(\n# Schema: %{NOTSPACE:schema}  Last_errno: %{NUMBER:last_err_no}  Killed: %{NUMBER:killed})(\n# Query_time: %{NUMBER:query_time}  Lock_time: %{NUMBER:lock_time}  Rows_sent: %{NUMBER:rows_sent}  Rows_examined: %{NUMBER:rows_examined}  Rows_affected: %{NUMBER:rows_affected})(\n# Bytes_sent: %{NUMBER:bytes_sent})(\nSET timestamp=%{NUMBER:set_timestamp_str};)(\n%{GREEDYDATA:query})"
		}
	}
	if "_grokparsefailure" not in [tags] {
		date{
			match => ["set_timestamp_str","UNIX"]
			target => "set_timestamp"
		}
		date{
			match => ["timestamp","yyyy-MM-dd'T'HH:mm:ss.SSSSSSZZ"]
			target => "log_timestamp"
			remove_field => [ "set_timestamp_str", "timestamp"]
		}
	}
}

output {
	elasticsearch {
		hosts => ["10.10.2.207:9200"]
		index => "mysql_slow_queries-%{+YYYY.MM.dd}"
	}
}
